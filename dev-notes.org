#+TITLE: dev-notes
* git
** Install
*** Fedora
sudo yum install git
git config --global user.name "Jack Gill"
git config --global user.email jack@jackmgill.com
*** Ubuntu
sudo apt-get instlal g
*** Windows
Download windows installer:
http://git-scm.com/download
** push changes to github:
git push github master
** update local repo from github:
git pull github master
** add remote
git remote add github git@github.com:jackgill/Project-Euclid.git
* Ruby
** Install
*** Linux
use the bash snippet on the rvm home page:
http://beginrescueend.com/
install all of the rvm dependencies (specified in the shell output from the rvm installer)
rvm install 1.9.2
rvm use 1.9.2 --default
*** Windows
use the Rails Installer:
http://railsinstaller.org/
* sqlite
** list tables
sqlite3 db\development.sqlite3;
SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;
SELECT sql FROM sqlite_master WHERE type = 'table' AND tbl_name = 'table_name';
* postgres
** Install
*** Fedora
sudo yum install postgresql-server
mkdir ~/postgres_data
** to start the database server: 
- postgres -D (path to data directory)
*** Windows
- C:\Users\Jack\PostgreSQL\9.1\bin\postgres.exe -D C:\Users\Jack\PostgreSQL\9.1\data
*** Ubuntu
- postgres -D ~/postgres_data/
** connect to the database server: 
psql -d (database name) -U (user name)
psql -d euclid_development -U euclid
(password for user euclid is foo)
special bonus command:
psql -d euclid_development -U euclid -c "select * from Users;"
** set up new PG db
initially, connect as user 'postgres' and create a new role, a new database, and set privleges:
 psql -U postgres
 create user jack password 'password' (NOTE: user name will be lower-cased)
 create database (database name);
 grant all privileges on (database name) to (user name);
** to get the postgres db adapter for ruby:
sudo gem install pg
** restart postgres server process
pg_ctl restart -D C:\Users\Jack\PostgreSQL\9.1\data
** show columns
show columns \d (table name)
* Heroku
** create new heroku app
heroku create --stack cedar
** deploy new version to heroku
git push heroku master
** run database migration on heroku db
heroku run rake db:migrate
** open site on heroku
heroku open
http://electric-lightning-9621.heroku.com/
* Rails
** Install
*** Linux
gem install rails
*** Windows
Use the Rails Installer:
http://railsinstaller.org/
** generate a database migration to add a column to an existing table
rails generate migration AddColumnToTable column:type
rails generate migration AddIsAdminToUsers is_admin:boolean
** generate a controller
rails generate controller account login logout
* scaffolding
rails generate scaffold user first_name:string last_name:string email:string login:string hashed_password:string salt:string
rails generate scaffold building name:string address:text
rails generate scaffold spot building_id:integer number:integer floor:integer owner_id:integer
rails generate scaffold request requester_id:integer start_date:date end_date:date bid_price:decimal
rails generate scaffold transaction spot_id:integer buyer_id:integer seller_id:integer start_date:date end_date:date price:decimal
* Business
What is a business?
An LLC.
A memorandum of understanding?
It has:
- a domain
- email
- a mailing address, usually a PO Box
- a web site
- a phone number?
When you start a small business, the LLC is a legal shim that stands between you and liability. 
The various means to contacts a business - email, phone, snail mail - all fall through to the personal
equivalents for the founders. 
Likewise, the income and taxes fall through to the founders.

So when you start an LLC, you're basically creating a thin layer between your person and the rest of 
the world.

Need to do some cost projections based on various hosting scenarios.
Need to research these hosting providers in depth: Heroku, Engine Yard, EC2. (others: Rackspace, Linode) 
Need to write a position paper on PaaS vs IaaS.
Need to do some revenue projections based on usage volume, and our cut.

cost project + revenue = rudimentary business model?

* Brainstorming
** counter offers:
field for transaction owner
two fields for each party assenting to the transaction
facilitate counter offers by resetting "owner" field
transaction is complete when both parties assent
TODO: mutable or immutable transactions?
* Features
** messaging -- release valve
** link-to-listing
** lightning offers
** transaction queue (on user dashboard)
** fine-grained management of notifications
** private offer facility
* Misc
- only admin users should be able to view the admin controller
- "Make spot available" should pre-select spot ID
