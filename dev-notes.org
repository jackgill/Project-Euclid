#+TITLE: dev-notes
* sqlite
** list tables
sqlite3 db\development.sqlite3;
SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;
SELECT sql FROM sqlite_master WHERE type = 'table' AND tbl_name = 'table_name';
* postgres
to start the database server: 
 postgres -D (path to dat directory)
initially, connect as user 'postgres' and create a new role, a new database, and set privleges:
 psql -U postgres
 create user jack password 'password' (NOTE: user name will be lower-cased)
 create database (database name);
 grant all privileges on (database name) to (user name);
to connect to the database server: psql -d (database name) -U (user name)

to get the postgres db adapter for ruby:
sudo gem install pg

psql -d euclid_development -U euclid
* git
to push changes to github:
git push -u origin master
* scaffolding
rails generate scaffold user first_name:string last_name:string email:string login:string hashed_password:string salt:string
rails generate controller account login logout
rails generate scaffold building name:string address:text
rails generate scaffold spot building_id:integer number:integer floor:integer owner_id:integer
rails generate scaffold request requester_id:integer start_date:date end_date:date bid_price:decimal
rails generate scaffold transaction spot_id:integer buyer_id:integer seller_id:integer start_date:date end_date:date price:decimal
* Heroku
heroku create --stack cedar
git push heroku master
heroku run rake db:migrate
http://electric-lightning-9621.herokuapp.com/
* Misc
strategy:
first, generate scaffolding for the major domain entities
then, generate database migrations to establish foreign-key relationships between them

counter offers:
field for transaction owner
two fields for each party assenting to the transaction
facilitate counter offers by resetting "owner" field
transaction is complete when both parties assent
TODO: mutable or immutable transactions?


need messaging -- release valve
need link-to-listing feature

lightning offers

need a transaction queue
need fine-grained management of notifications
private offer facility
